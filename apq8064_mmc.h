/*-
 * Copyright (c) 2014 Ganbold Tsagaankhuu <ganbold@freebsd.org>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * $FreeBSD$
 */

#ifndef	_ARM_APQ8064_MMCREG_H
#define	_ARM_APQ8064_MMCREG_H

#define	APQ8064_SDCC_CRCI_SDC1			6
#define	APQ8064_SDCC_CRCI_SDC2			7
#define	APQ8064_SDCC_CRCI_SDC3			12
#define	APQ8064_SDCC_CRCI_SDC4			13

#define	APQ8064_SD_PHYS_BASE			(0x12400000)
#define	APQ8064_SD_CLK				400000 /* 400KHz */

#define	APQ8064_SD_POWER			0x00
#define	APQ8064_SD_POWER_OPENDRAIN		(1 << 6)
#define	APQ8064_SD_POWER_CTRL_OFF		0x00
#define	APQ8064_SD_POWER_CTRL_UP		0x02
#define	APQ8064_SD_POWER_CTRL_ON		0x03

#define	APQ8064_SD_CLOCK			0x04
#define APQ8064_SD_CLOCK_SELECTIN		(1 << 14)
#define APQ8064_SD_CLOCK_INVERTOUT		(1 << 13)
#define APQ8064_SD_CLOCK_FLOWENA		(1 << 12)
#define	APQ8064_SD_CLOCK_WIDEBUS		(1 << 11)
#define	APQ8064_SD_CLOCK_BYPASS			(1 << 10)
#define	APQ8064_SD_CLOCK_PWRSAVE		(1 << 9)
#define	APQ8064_SD_CLOCK_ENABLE			(1 << 8)
#define	APQ8064_SD_CLOCK_CLKDIVMASK		0xff

#define	APQ8064_SD_ARGUMENT			0x08
#define	APQ8064_SD_COMMAND			0x0c
#define	APQ8064_SD_COMMAND_CCSDISABLE		(1 << 15)
#define	APQ8064_SD_COMMAND_CCSENABLE		(1 << 14)
#define	APQ8064_SD_COMMAND_MCIABORT		(1 << 13)
#define	APQ8064_SD_COMMAND_DATCMD		(1 << 12)
#define	APQ8064_SD_COMMAND_PROGENA		(1 << 11)
#define	APQ8064_SD_COMMAND_ENABLE		(1 << 10)
#define	APQ8064_SD_COMMAND_PENDING		(1 << 9)
#define	APQ8064_SD_COMMAND_INTERRUPT		(1 << 8)
#define	APQ8064_SD_COMMAND_LONGRSP		(1 << 7)
#define	APQ8064_SD_COMMAND_RESPONSE		(1 << 6)
#define	APQ8064_SD_COMMAND_CMDINDEXMASK		0x3f

#define	APQ8064_SD_RESPCMD			0x10
#define	APQ8064_SD_RESP0			0x14
#define	APQ8064_SD_RESP1			0x18
#define	APQ8064_SD_RESP2			0x1c
#define	APQ8064_SD_RESP3			0x20
#define	APQ8064_SD_DATATIMER			0x24
#define	APQ8064_SD_DATALENGTH			0x28

#define	APQ8064_SD_DATACTRL			0x2c
#define	APQ8064_SD_DATACTRL_BLOCKSIZESHIFT	4
#define	APQ8064_SD_DATACTRL_BLOCKSIZEMASK	0xf
#define	APQ8064_SD_DATACTRL_DMAENABLE		(1 << 3)
#define	APQ8064_SD_DATACTRL_MODE		(1 << 2)
#define	APQ8064_SD_DATACTRL_WRITE		(0 << 1)
#define	APQ8064_SD_DATACTRL_READ		(1 << 1)
#define	APQ8064_SD_DATACTRL_ENABLE		(1 << 0)

#define	APQ8064_SD_DATACNT			0x30
#define	APQ8064_SD_STATUS			0x34
#define	APQ8064_SD_STATUSCCSTIMEOUT		(1 << 26)
#define	APQ8064_SD_STATUSSDIOINTOPER		(1 << 25)
#define	APQ8064_SD_STATUSATACMDCOMPL		(1 << 24)
#define	APQ8064_SD_STATUSPROGDONE		(1 << 23)
#define	APQ8064_SD_STATUSSDIOINTR		(1 << 22)
#define	APQ8064_SD_STATUS_RXDATAAVLBL		(1 << 21)
#define	APQ8064_SD_STATUS_TXDATAAVLBL		(1 << 20)
#define	APQ8064_SD_STATUS_RXFIFOEMPTY		(1 << 19)
#define	APQ8064_SD_STATUS_TXFIFOEMPTY		(1 << 18)
#define	APQ8064_SD_STATUS_RXFIFOFULL		(1 << 17)
#define	APQ8064_SD_STATUS_TXFIFOFULL		(1 << 16)
#define	APQ8064_SD_STATUS_RXFIFOHALFFULL	(1 << 15)
#define	APQ8064_SD_STATUS_TXFIFOHALFEMPTY	(1 << 14)
#define	APQ8064_SD_STATUS_RXACTIVE		(1 << 13)
#define	APQ8064_SD_STATUS_TXACTIVE		(1 << 12)
#define	APQ8064_SD_STATUS_CMDACTIVE		(1 << 11)
#define	APQ8064_SD_STATUS_DATABLOCKEND		(1 << 10)
#define	APQ8064_SD_STATUS_STARTBITERR		(1 << 9)
#define	APQ8064_SD_STATUS_DATAEND		(1 << 8)
#define	APQ8064_SD_STATUS_CMDSENT		(1 << 7)
#define	APQ8064_SD_STATUS_CMDRESPEND		(1 << 6)
#define	APQ8064_SD_STATUS_RXOVERRUN		(1 << 5)
#define	APQ8064_SD_STATUS_TXUNDERRUN		(1 << 4)
#define	APQ8064_SD_STATUS_DATATIMEOUT		(1 << 3)
#define	APQ8064_SD_STATUS_CMDTIMEOUT		(1 << 2)
#define	APQ8064_SD_STATUS_DATACRCFAIL		(1 << 1)
#define	APQ8064_SD_STATUS_CMDCRCFAIL		(1 << 0)

#define	APQ8064_SD_CLEAR			0x38
#define	APQ8064_SD_CLEAR_CMDCRCFAILCLR		(1 << 0)
#define	APQ8064_SD_CLEAR_DATACRCFAILCLR		(1 << 1)
#define	APQ8064_SD_CLEAR_CMDTIMEOUTCLR		(1 << 2)
#define	APQ8064_SD_CLEAR_DATATIMEOUTCLR		(1 << 3)
#define	APQ8064_SD_CLEAR_TXUNDERRUNCLR		(1 << 4)
#define	APQ8064_SD_CLEAR_RXOVERRUNCLR		(1 << 5)
#define	APQ8064_SD_CLEAR_CMDRESPENDCLR		(1 << 6)
#define	APQ8064_SD_CLEAR_CMDSENTCLR		(1 << 7)
#define	APQ8064_SD_CLEAR_DATAENDCLR		(1 << 8)
#define	APQ8064_SD_CLEAR_DATABLOCKENDCLR	(1 << 10)

#define	APQ8064_SD_MASK0			0x03c
#define	APQ8064_SD_MASK0_CMDCRCFAILMASK		(1 << 0)
#define	APQ8064_SD_MASK0_DATACRCFAILMASK	(1 << 1)
#define	APQ8064_SD_MASK0_CMDTIMEOUTMASK		(1 << 2)
#define	APQ8064_SD_MASK0_DATATIMEOUTMASK	(1 << 3)
#define	APQ8064_SD_MASK0_TXUNDERRUNMASK		(1 << 4)
#define	APQ8064_SD_MASK0_RXOVERRUNMASK		(1 << 5)
#define	APQ8064_SD_MASK0_CMDRESPENDMASK		(1 << 6)
#define	APQ8064_SD_MASK0_CMDSENTMASK		(1 << 7)
#define	APQ8064_SD_MASK0_DATAENDMASK		(1 << 8)
#define	APQ8064_SD_MASK0_DATABLOCKENDMASK	(1 << 10)
#define	APQ8064_SD_MASK0_CMDACTIVEMASK		(1 << 11)
#define	APQ8064_SD_MASK0_TXACTIVEMASK		(1 << 12)
#define	APQ8064_SD_MASK0_RXACTIVEMASK		(1 << 13)
#define	APQ8064_SD_MASK0_TXFIFOHALFEMPTYMASK	(1 << 14)
#define	APQ8064_SD_MASK0_RXFIFOHALFFULLMASK	(1 << 15)
#define	APQ8064_SD_MASK0_TXFIFOFULLMASK		(1 << 16)
#define	APQ8064_SD_MASK0_RXFIFOFULLMASK		(1 << 17)
#define	APQ8064_SD_MASK0_TXFIFOEMPTYMASK	(1 << 18)
#define	APQ8064_SD_MASK0_RXFIFOEMPTYMASK	(1 << 19)
#define	APQ8064_SD_MASK0_TXDATAAVLBLMASK	(1 << 20)
#define	APQ8064_SD_MASK0_RXDATAAVLBLMASK	(1 << 21)
#define	APQ8064_SD_MASK0_SDIOINTMASK		(1 << 22)
#define	APQ8064_SD_MASK0_PROGDONEMASK		(1 << 23)
#define	APQ8064_SD_MASK0_ATACMDCOMPLMASK	(1 << 24)
#define	APQ8064_SD_MASK0_SDIOINTOPERMASK	(1 << 25)
#define	APQ8064_SD_MASK0_CCSTIMEOUTMASK		(1 << 26)

#define	APQ8064_SD_MASK1			0x40
#define	APQ8064_SD_FIFOCNT			0x44
#define	APQ8064_SD_CCSTIMER			0x58
#define	APQ8064_SD_FIFO				0x80 /* to 0xbc */

#define	APQ8064_SD_FIFO_SIZE			64

#define APQ8064_SD_IRQENABLE	\
	(APQ8064_SD_MASK0_CMDCRCFAILMASK | APQ8064_SD_MASK0_DATACRCFAILMASK |	\
	APQ8064_SD_MASK0_CMDTIMEOUTMASK | APQ8064_SD_MASK0_DATATIMEOUTMASK |	\
	APQ8064_SD_MASK0_TXUNDERRUNMASK | APQ8064_SD_MASK0_RXOVERRUNMASK |	\
	APQ8064_SD_MASK0_CMDRESPENDMASK | APQ8064_SD_MASK0_CMDSENTMASK |	\
	APQ8064_SD_MASK0_DATAENDMASK | APQ8064_SD_MASK0_PROGDONEMASK)

#endif	/* _ARM_APQ8064_MMCREG_H */
